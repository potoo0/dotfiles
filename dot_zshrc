# setup zinit
# ZINIT_HOME="/usr/local/share/zinit/zinit.git"
_ZINIT_ROOT="/usr/local/share/zinit"
export ZPFX="$_ZINIT_ROOT/polaris"
declare -Ag ZINIT=(
    [BIN_DIR]="$_ZINIT_ROOT/zinit.git"
    [HOME_DIR]="$_ZINIT_ROOT"
    [PLUGINS_DIR]="$_ZINIT_ROOT/plugins"
    [COMPLETIONS_DIR]="$_ZINIT_ROOT/completions"
    [SNIPPETS_DIR]="$_ZINIT_ROOT/snippets"
    [COMPINIT_OPTS]='-C'
)
[ ! -d "${ZINIT[HOME_DIR]}" ] && mkdir -p "${ZINIT[HOME_DIR]}"
[ ! -d "${ZINIT[BIN_DIR]}/.git" ] && git clone https://github.com/zdharma-continuum/zinit.git "${ZINIT[BIN_DIR]}"
source "${ZINIT[BIN_DIR]}/zinit.zsh"

########################## Load Plugin ##########################
# theme
zinit ice as"command" from"gh-r" \
    atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" \
    atpull"%atclone" src"init.zsh"
zinit light starship/starship

# plugin / snippet
zinit snippet OMZL::key-bindings.zsh    # must load before fzf

zinit wait lucid for \
        light-mode \
        atclone'dircolors -b LS_COLORS > clrs.zsh' \
        atpull'%atclone' pick'clrs.zsh' nocompile'!' \
        atload'zstyle ":completion:*" list-colors "${(s.:.)LS_COLORS}"' \
    trapd00r/LS_COLORS \
        atinit'
            # 双向匹配, 可以快速 cd / ls...
            zstyle ":completion:*" matcher-list "m:{[:lower:][:upper:]-_}={[:upper:][:lower:]_-}" "r:|=*" "l:|=* r:|=*"
            zstyle ":completion:*:git-checkout:*" sort false
            zstyle ":completion:*:descriptions" format "[%d]"
            zstyle ":completion:*" menu no
            zstyle ":completion:*" use-cache yes
            zstyle ":completion:*" cache-path $ZSH_CACHE_DIR
            # Aloxaf/fzf-tab 必须在 fzf 加载之后, 否则 tab 将无任何效果
            zstyle ":fzf-tab:complete:cd:*" fzf-preview '\''ls --color $realpath'\''
        ' \
    Aloxaf/fzf-tab \
        atinit"zicompinit; zicdreplay" \
    zdharma-continuum/fast-syntax-highlighting \
        atinit='ZSH_AUTOSUGGEST_MANUAL_REBIND=1' \
        atload"!_zsh_autosuggest_start; bindkey '^f' autosuggest-accept" \
    zsh-users/zsh-autosuggestions \
        blockf atload"zicompinit; zicdreplay" \
    zsh-users/zsh-completions

# programs
zinit wait lucid for \
    OMZP::sudo \
        from'gh-r' as'program' \
        atload'source <(fzf --zsh)' \
    junegunn/fzf \
        from'gh-r' as'program' \
        atload'lfcd() { cd "$(command lf -print-last-dir "$@")" }; bindkey -s "^o" "lfcd\n"' \
    gokcehan/lf

########################## ZSH Basic Options ##########################
setopt autocd              # change directory just by typing its name
setopt correct             # auto correct mistakes
setopt interactivecomments # allow comments in interactive mode
setopt magicequalsubst     # enable filename expansion for arguments of the form ‘anything=expression’
setopt nonomatch           # hide error message if there is no match for the pattern
setopt notify              # report the status of background jobs immediately
setopt numericglobsort     # sort filenames numerically when it makes sense
setopt promptsubst         # enable command substitution in prompt

# b for bash. ref: https://github.com/zsh-users/zsh/blob/master/Functions/Zle/select-word-style
autoload -U select-word-style && select-word-style b

########################## History Configuration ##########################
HISTSIZE=10000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE

# https://man.archlinux.org/man/zshoptions.1.en
setopt extended_history     # history file with timestamp
setopt appendhistory
setopt inc_append_history
unsetopt sharehistory inc_append_history_time

setopt hist_ignore_space    # ignore the first character on the line is a space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

########################## Common ##########################
# start ssh-agent or reuse
run-ssh-agent() {
    if ! pgrep -u "$USER" ssh-agent > /dev/null; then
        ssh-agent -t 1h > "$XDG_RUNTIME_DIR/ssh-agent.env"
    fi
    if [[ ! "$SSH_AUTH_SOCK" ]]; then
        source "$XDG_RUNTIME_DIR/ssh-agent.env" >/dev/null
        echo 'ssh-agent env' && cat "$XDG_RUNTIME_DIR/ssh-agent.env"
    fi
}

########################## Add on ##########################
export TIME_STYLE='+%Y-%m-%d %H:%M:%S'
export EDITOR=vim
export PATH=/opt/trzsz:~/.local/bin:$PATH

# less with syntax highlighting(pkg: source-highlight):
export LESSOPEN="| /usr/bin/src-hilite-lesspipe.sh %s"
export LESS=' -R '

alias ls='ls --color=auto'
alias ll='ls -hl --group-directories-first'
alias la='ls -ahl --group-directories-first'
alias tma='tmux a || tmux'
alias curl_header='curl -o /dev/null -sS -D - '
alias code='${CODE_PATH:-/mnt/d/soft/VSCode/bin/code}'

function cursor() {
  local _cursor_path="${CURSOR_PATH:-/mnt/d/soft/cursor/Cursor.exe}"
  "$_cursor_path" --remote wsl+Arch "$(realpath ${1:-.})"
}

########################## Other Stuff ##########################
[ -f "$HOME/.localrc" ] && source "$HOME/.localrc"

