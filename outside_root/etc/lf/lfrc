# https://github.com/gokcehan/lf/blob/master/etc/lfrc.example

set autoquit  true  # 没有客户端时自动关闭 server
set mouse     true

# interpreter for shell commands
set shell     bash
# shell options, -e 遇到错误立即退出; -u 未定义的环境变量将报错退出
set shellopts '-eu'

set infotimefmtnew '01-02 15:04'     # 文件的年份是当前年 时间格式
set infotimefmtold '2006-01-02'     # 文件的年份非当前年 时间格式
set timefmt    '2006-01-02 15:04:05' # 底部的时间格式
set incsearch  true                  # 增量搜索, 即每次按下字符都搜索
set ignorecase true

cmd usage $du -h -d1 | less
map <enter> shell

# execute current file (must be executable)
map x $$f
map X !$f

# 样式 r32 版本加入
set copyfmt    "\033[7;33m" # 方块的颜色, 黄色
set cutfmt     "\033[7;31m" # 方块的颜色, 红色
set selectfmt  "\033[7;35m" # 方块的颜色, 紫色
set tagfmt     "\033[31m"   # * 的颜色, 红色

# lfcd cancel
map q %{{
  lf -remote "send $id :cd $OLDPWD; quit"
}}
map Q quit

# integration with fzf
cmd fzf_jump ${{
    res="$(fzf --header='Jump to location')"
    if [ -n "$res" ]; then
        if [ -d "$res" ]; then
            cmd="cd"
        else
            cmd="select"
        fi
        res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id $cmd \"$res\""
    fi
}}
map <c-f> :fzf_jump

# go run *.go
cmd runfile !{{
    case "$f" in
    *.go)
        echo ">>> run go file: $f"
        go run "$f"
        ;;
    *.sh)
        echo ">>> run shell: $f"
        bash "$f"
        ;;
    *)
        echo ">>> not supported: $f"
        exit 1
        ;;
    esac
}}
map <c-j> :runfile

